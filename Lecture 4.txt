CLI (command line interface) : 글자를 입력하여 컴퓨터에 명령을 내리는 방식임. 
                               가장 대표적인 예시로는 도스, 명령 프롬프트, bash로 대표되는 유닉스 셸 환경이 있음.

Linux : Unix와 유사하게 만들어진 open-source (웹서버에서 가장 점유율 높음)
        다양한 변형 : 우분투, 페도라, 데비안 ...
        보안성 뛰어남, 안정적임
        CLI 기반 (터미널)

kernel (at OS) : OS의 core. 하드웨어와 소프트웨어 중간에 위치
shell : kernel과 통신하는 역할. 명령어 입력창

pwd : 현재 작업 중인 디렉터리의 이름을 출력 (가장 넓은 범위 : root / root 아래로 디렉토리 생성하는 행위 : mount)

ls : root 바로 아래 디렉토리 출력
cd ~ : ~로 디렉토리 옮기기 

<arguments> : cd 명령어 뒤에 붙임
/ root
. current directory (현재 디렉토리)
.. upper-level directory (상위 디렉토리)
~ home of current user 
/[directory name] absolute path (절대 경로)
./[directory name] relative path (상대 경로)
../[directory name] relative path (상대 경로)

<options> : ls 명령어 뒤에 붙임
-l : 자세한 정보 출력 (파일에 대한 권한, 파일에 대한 소유정보, 파일 용량, 생성 날짜 ...)
-lh : -l이랑 똑같은데, 큰 유닛들을 다룰 때는 -l보다는 -lh
/[directory] : 현재 디렉토리를 유지한 상태에서 다른 디렉토리의 정보 출력
...

<long format>
file permissions, owner, group, size (in bytes), modification time, file name
리눅스는 소유권이 굉장히 중요 (users가 많기 때문, 보안성 때문)

<Tip : autocompletion>
TAB : 자동완성 기능
up arrow : 전에 썼던 명령어 

clear : 터미널 창 비우기

exit : 커맨드 종료

cp [복사하고 싶은 파일][복사해서 어떤 이름으로 할지]: 파일 복사
cp -r [복사하고 싶은 디렉토리][어디로 복사본을 위치할건지] : 디렉토리 복사 (-r : nested 디렉토리 또한 다 가져옴) 

mv [특정 파일][특정 이름] : 특정 파일을 특정 이름으로 바꾸기
mv [특정 디렉토리 파일][다른 특정 디렉토리] : 특정 디렉토리 파일을 다른 특정 디렉토리로 위치 옮기기

rm [파일 이름] : 파일 지우기
CLI에서의 rm은 복구가 불가능 (영구적으로 지움)

<wildcards>
* : 모든 파일 이름 
  ex) *.py : 현재 디렉토리에서 .py 확장자 모든 파일들 
g* : g라고 시작하는 모든 문자 파일
Data??? : Data라고 시작하면서 3글자가 연이어 있는 파일들
